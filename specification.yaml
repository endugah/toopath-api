swagger: '2.0'
info:
  version: 1.0.0
  title: TooPath
  description: TooPath is a device tracking software offered as a service.
  contact:
    email: albert.diaz.benitez@fib.upc.edu
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
host: '127.0.0.1:8000'
schemes:
  - http
tags:
  - name: users
    description: petitions for the user management
  - name: login
    description: petitions for login
  - name: token
    description: petitions to manage tokens
  - name: devices
    description: petitions to manage devices
  - name: track
    description: petitions to manage tracks
  - name: track location
    description: petitions to manage the tracks locations
  - name: actual location
    description: petitions to manage the actual location of a device
paths:
  /devices/:
    get:
      tags:
        - devices
      summary: Get all the user devices
      description: >-
        Petition to retrieve all the devices instances associated with the user
        identified by the JWT
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      responses:
        '200':
          description: devices information retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
    post:
      tags:
        - devices
      summary: Create a new device
      description: >-
        Petition to create a device instance with all the fields passed on the
        body and associated with the user identified by the JWT
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          description: User info
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '200':
          description: device created succesfully
          schema:
            $ref: '#/definitions/DeviceResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '409':
          description: Resource conflict
          schema:
            $ref: '#/definitions/Error409'
  '/devices/{deviceId}/':
    get:
      tags:
        - devices
      summary: Get device info
      description: >-
        Petition to retrieve the device instance associated with the user
        identified by the JWT and identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device to retrieve
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Device information retrieved
          schema:
            $ref: '#/definitions/DeviceResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
    put:
      tags:
        - devices
      summary: Change representation of a device
      description: >-
        Petition to change the representation of the device associated with the
        user identified by the JWT and identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device to change the representation
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Device representation to change
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '201':
          description: Device representation changed succesfully
          schema:
            $ref: '#/definitions/DeviceResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
    patch:
      tags:
        - devices
      summary: Update fields of a device
      description: >-
        Petition to update or change fields of the device instance associated
        with the user identified by the JWT and identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device to update fields
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Device fields to update
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '201':
          description: Device updated succesfully
          schema:
            $ref: '#/definitions/DeviceResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
    delete:
      tags:
        - devices
      summary: Delete a device instance
      description: >-
        This petition allow to delete the device instance identified by the ID
        located on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device to be deleted
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Device deleted succesfully
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
  '/devices/{deviceId}/actualLocation/':
    get:
      tags:
        - actual location
      summary: Retrieve the Actual Location of a device
      description: >-
        Petition to retrieve the actual location instance associated with the
        device identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: device ID of the actual location
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Actual Location retrieved succesfully
          schema:
            $ref: '#/definitions/ActualLocationResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
    put:
      tags:
        - actual location
      summary: Change representation of the actual location of a device
      description: >-
        Petition to change representation of the actual location associated with
        the device identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: device ID of the actual location
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: New Actual Location representation info
          required: true
          schema:
            $ref: '#/definitions/ActualLocation'
      responses:
        '200':
          description: Actual Location representation changed succesfully
          schema:
            $ref: '#/definitions/ActualLocationResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
  '/devices/{deviceId}/tracks/':
    get:
      tags:
        - track
      summary: Get all the tracks of a device
      description: >-
        Petition to retrieve all the tracks instance associated with the device
        identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device to return tracks
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Tracks information retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/TrackResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
    post:
      tags:
        - track
      summary: Create a new track
      description: >-
        Petition to retrieve all the tracks instance associated with the device
        identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device to return tracks
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: User info
          required: true
          schema:
            $ref: '#/definitions/Track'
      responses:
        '201':
          description: Track created succesfully
          schema:
            $ref: '#/definitions/TrackResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device not found
          schema:
            $ref: '#/definitions/Error404'
        '409':
          description: Resource conflict
          schema:
            $ref: '#/definitions/Error409'
  '/devices/{deviceId}/tracks/{trackId}/':
    get:
      tags:
        - track
      summary: Get track information
      description: >-
        Petition to retrieve the track instance identified by the ID on the URL
        associated with the device identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: device ID of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to retrieve
          required: true
          type: integer
          format: int64
      responses:
        '201':
          description: Track info retrieved succesfully
          schema:
            $ref: '#/definitions/TrackResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device or Track not found
          schema:
            $ref: '#/definitions/Error404'
    put:
      tags:
        - track
      summary: Change representation of a track
      description: >-
        Petition to cahnge the representation of the track instance identified
        by the ID on the URL associated with the device identified by the ID on
        the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: device ID of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to change the representation
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: New track representation info
          required: true
          schema:
            $ref: '#/definitions/Track'
      responses:
        '201':
          description: Track representation changed succesfully
          schema:
            $ref: '#/definitions/TrackResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device or Track not found
          schema:
            $ref: '#/definitions/Error404'
    patch:
      tags:
        - track
      summary: Update fields of a track
      description: >-
        Petition to update the fields of the track instance identified by the ID
        on the URL associated with the device identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: device ID of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: New track fields values info
          required: true
          schema:
            $ref: '#/definitions/Track'
      responses:
        '201':
          description: Track fields updated succesfully
          schema:
            $ref: '#/definitions/TrackResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device or Track not found
          schema:
            $ref: '#/definitions/Error404'
    delete:
      tags:
        - track
      summary: Delete a track
      description: >-
        Petition to delete the track instance identified by the ID on the URL
        associated with the device identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: device ID of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to be deleted
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Track deleted succesfully
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device or Track not found
          schema:
            $ref: '#/definitions/Error404'
  '/devices/{deviceId}/tracks/{trackId}/trackLocations/':
    post:
      tags:
        - track location
      summary: Create a new track location
      description: >-
        Petition to create the track location instance asociated on the track
        identified by the ID on the URL associated with the device identified by
        the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to create the new track location
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Track location info
          required: true
          schema:
            $ref: '#/definitions/TrackLocation'
      responses:
        '201':
          description: Track Location created succesfully
          schema:
            $ref: '#/definitions/TrackLocationResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Device or Track not found
          schema:
            $ref: '#/definitions/Error404'
  '/devices/{deviceId}/tracks/{trackId}/trackLocations/{trackLocationId}':
    put:
      tags:
        - track location
      summary: Change the representation of the track location
      description: >-
        Petition to delete the track location instance asociated on the track
        identified by the ID on the URL associated with the device identified by
        the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to update the new track location
          required: true
          type: integer
          format: int64
        - name: trackLocationId
          in: path
          description: ID of the track location to be updated
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Track Location representation changed succesfully
          schema:
            $ref: '#/definitions/TrackLocationResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: 'Device, Track or Track Location not found'
          schema:
            $ref: '#/definitions/Error404'
    delete:
      tags:
        - track location
      summary: Delete a track location instance
      description: >-
        Petition to delete the track location instance asociated on the track
        identified by the ID on the URL associated with the device identified by
        the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: deviceId
          in: path
          description: ID of device of the track
          required: true
          type: integer
          format: int64
        - name: trackId
          in: path
          description: ID of the track to delete the new track location
          required: true
          type: integer
          format: int64
        - name: trackLocationId
          in: path
          description: ID of the track location to be deleted
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Track Location deleted succesfully
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: 'Device, Track or Track Location not found'
          schema:
            $ref: '#/definitions/Error404'
  /users/:
    post:
      tags:
        - users
      summary: Create a new user
      description: Petition to create the user instance with the info passed on the body
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: User info
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User created
          schema:
            $ref: '#/definitions/UserResponse'
        '400':
          description: This field is required
          schema:
            $ref: '#/definitions/Error400'
        '409':
          description: Resource conflict
          schema:
            $ref: '#/definitions/Error409'
  '/users/{userId}/':
    get:
      tags:
        - users
      summary: Get information of the user
      description: Petition to retrieve the user instance identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error404'
    put:
      tags:
        - users
      summary: Change representation of the user
      description: >-
        Petition to change the representation of the user instance identified by
        the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: User representation to be changed
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Representation changed succcesfully
          schema:
            $ref: '#/definitions/UserResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error404'
    patch:
      tags:
        - users
      summary: Update user fields
      description: >-
        Petition to update the fields of the user instance identified by the ID
        on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: User fields to be updated
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Fields updated succesfully
          schema:
            $ref: '#/definitions/UserResponse'
        '400':
          description: Bad Request due to invalid body or fields format
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error404'
    delete:
      tags:
        - users
      summary: Delete user instance
      description: Petition to delete the user instance identified by the ID on the URL
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - JWT: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: User deleted succesfully
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden resource
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error404'
  /login/:
    post:
      tags:
        - login
      summary: Log In into the API
      description: Petition to log in to the API and retrieve the JWT
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: Log in succesful
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Unable to log in with provided credentials.
  /login-google/:
    post:
      tags:
        - login
      summary: Log In into the API using a Google account
      description: >-
        Petition to log in using the Google account to the API and retrieve the
        JWT
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Google credentials
          required: true
          schema:
            $ref: '#/definitions/GoogleLogin'
      responses:
        '200':
          description: Log in succesful
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Unable to log in with provided credentials.
  /api-token-refresh/:
    post:
      tags:
        - token
      summary: Refresh the JWT
      description: Petition to refresh a JWT passed on the body
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        '200':
          description: Token refreshed
          schema:
            $ref: '#/definitions/TokenResponse'
  /api-token-verify/:
    post:
      tags:
        - token
      summary: Check if the JWT token is valid
      description: Petition to check the validity of the JWT passed on the body
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        '200':
          description: Token valid
        '400':
          description: Token not valid
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Device:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      trash:
        type: boolean
      ip_address:
        type: string
      port_number:
        type: integer
      height:
        type: number
      speed:
        type: number
      heading:
        type: number
      utc:
        type: string
      device_privacy:
        type: string
      device_type:
        type: string
      device_imei:
        type: string
  Track:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  TrackLocation:
    type: object
    properties:
      point:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
              format: float
              maxItems: 2
              minItems: 2
  ActualLocation:
    type: object
    properties:
      point:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
              format: float
              maxItems: 2
              minItems: 2
  Login:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  GoogleLogin:
    type: object
    properties:
      email:
        type: string
      google-token:
        type: string
  User:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
  DeviceResponse:
    type: object
    properties:
      did:
        type: integer
        format: int64
      owner:
        type: string
      tracks:
        type: array
        items:
          $ref: '#/definitions/TrackResponse'
      name:
        type: string
      description:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      trash:
        type: boolean
      ip_address:
        type: string
      port_number:
        type: integer
      height:
        type: number
      speed:
        type: number
      heading:
        type: number
      utc:
        type: string
      device_privacy:
        type: string
      device_type:
        type: string
      device_imei:
        type: string
  TrackResponse:
    type: object
    properties:
      tid:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      device:
        type: integer
        format: int64
      locations:
        type: object
        properties:
          type:
            type: string
          features:
            type: array
            items:
              $ref: '#/definitions/TrackLocationResponse'
  TrackLocationResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      type:
        type: string
      geometry:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
              format: float
              maxItems: 2
              minItems: 2
      properties:
        type: object
        properties:
          created_at:
            type: string
          updated_at:
            type: string
          track:
            type: integer
            format: int64
  ActualLocationResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      type:
        type: string
      geometry:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
              format: float
              maxItems: 2
              minItems: 2
      properties:
        type: object
        properties:
          created_at:
            type: string
          updated_at:
            type: string
          device:
            type: integer
            format: int64
  UserResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      date_joined:
        type: string
      last_login:
        type: string
  TokenResponse:
    type: object
    properties:
      token:
        type: string
  Error403:
    type: object
    properties:
      detail:
        type: string
  Error401:
    type: object
    properties:
      detail:
        type: string
  Error400:
    type: object
    properties:
      field_error:
        type: string
  Error404:
    type: object
    properties:
      detail:
        type: string
  Error409:
    type: object
    properties:
      detail:
        type: string
